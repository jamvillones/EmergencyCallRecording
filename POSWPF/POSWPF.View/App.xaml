<Application x:Class="ECR.View.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:ph="clr-namespace:PlaceholderTextBox;assembly=PlaceholderTextBox"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Converters.xaml" />
                <ResourceDictionary Source="DataTemplates.xaml" />
                <!--<ResourceDictionary Source="/Views/ResourceDictionaries/RoundScrollbar.xaml" />-->
            </ResourceDictionary.MergedDictionaries>

            <FontFamily x:Key="title.font">pack://application:,,,/Fonts/#Miguel De Northern</FontFamily>

            <SolidColorBrush x:Key="AccentColor.Primary"
                             Color="#1A1A1A" />

            <SolidColorBrush x:Key="Datagrid.IsSelected.Background"
                             Color="#B7B7B7" />

            <SolidColorBrush x:Key="AccentColor.Secondary"
                             Color="#F7CA0D" />

            <SolidColorBrush x:Key="Main.Foreground">Maroon</SolidColorBrush>

            <SolidColorBrush x:Key="Button.Static.Background">#E0EAFA</SolidColorBrush>
           
            <Style x:Key="FocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2"
                                       StrokeDashArray="1 2"
                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                       SnapsToDevicePixels="true"
                                       StrokeThickness="1" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="TextBox.Static.Background"
                             Color="#FFFFFFFF" />
            <Style x:Key="ComboBoxEditableTextBox"
                   TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="AllowDrop"
                        Value="true" />
                <Setter Property="MinWidth"
                        Value="0" />
                <Setter Property="MinHeight"
                        Value="0" />
                <Setter Property="FocusVisualStyle"
                        Value="{x:Null}" />
                <Setter Property="ScrollViewer.PanningMode"
                        Value="VerticalFirst" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Background="Transparent"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ComboBox.Static.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFF0F0F0"
                              Offset="0.0" />
                <GradientStop Color="#FFE5E5E5"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Static.Border"
                             Color="#FFACACAC" />
            <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                             Color="#FF606060" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                             Color="#FFABADB3" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                             Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                             Color="Transparent" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFECF4FC"
                              Offset="0.0" />
                <GradientStop Color="#FFDCECFC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Border"
                             Color="#FF7EB4EA" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                             Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                             Color="#FF7EB4EA" />
            <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFEBF4FC"
                              Offset="0.0" />
                <GradientStop Color="#FFDCECFC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                             Color="#FF7EB4EA" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFDAECFC"
                              Offset="0.0" />
                <GradientStop Color="#FFC4E0FC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Border"
                             Color="#FF569DE5" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                             Color="#FF000000" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                             Color="#FF569DE5" />
            <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
                                 EndPoint="0,1"
                                 StartPoint="0,0">
                <GradientStop Color="#FFDAEBFC"
                              Offset="0.0" />
                <GradientStop Color="#FFC4E0FC"
                              Offset="1.0" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                             Color="#FF569DE5" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                             Color="#FFF0F0F0" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                             Color="#FFD9D9D9" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                             Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                             Color="#FFFFFFFF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                             Color="#FFBFBFBF" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                             Color="Transparent" />
            <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                             Color="Transparent" />

            <Style x:Key="ComboBoxToggleButton"
                   TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle"
                        Value="true" />
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Focusable"
                        Value="false" />
                <Setter Property="ClickMode"
                        Value="Press" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Border x:Name="templateRoot"
                                    CornerRadius="3,3,0,0"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="true">
                                <Border x:Name="splitBorder"
                                        BorderBrush="Transparent"
                                        BorderThickness="1"
                                        HorizontalAlignment="Right"
                                        Margin="0"
                                        SnapsToDevicePixels="true"
                                        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                    <Path x:Name="arrow"
                                          Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                          Fill="{StaticResource ComboBox.Static.Glyph}"
                                          HorizontalAlignment="Center"
                                          Margin="0"
                                          VerticalAlignment="Center" />
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                                </MultiDataTrigger>-->
                                <Trigger Property="IsMouseOver"
                                         Value="true">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.MouseOver.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.MouseOver.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                    <!--<Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />-->
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsPressed"
                                         Value="true">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.Pressed.Glyph}" />
                                </Trigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="true" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                                </MultiDataTrigger>
                                <Trigger Property="IsEnabled"
                                         Value="false">
                                    <Setter Property="Fill"
                                            TargetName="arrow"
                                            Value="{StaticResource ComboBox.Disabled.Glyph}" />
                                </Trigger>
                                <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="false" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Border}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}"
                                                   Value="false" />
                                        <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                                   Value="true" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="templateRoot"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                    <Setter Property="Background"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                    <Setter Property="BorderBrush"
                                            TargetName="splitBorder"
                                            Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                                </MultiDataTrigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="ComboBoxEditableTemplate"
                             TargetType="{x:Type ComboBox}">
                <StackPanel>

                    <Grid x:Name="templateRoot"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                              Width="0" />
                        </Grid.ColumnDefinitions>

                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               Grid.ColumnSpan="2"
                               VerticalOffset="5"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                               Placement="Bottom"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <theme:SystemDropShadowChrome x:Name="shadow"
                                                          Color="Transparent"
                                                          MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="dropDownBorder"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                        BorderBrush="{StaticResource AccentColor.Primary}"
                                        CornerRadius="3"
                                        Padding="5"
                                        BorderThickness="1">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid x:Name="grid"
                                              RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas"
                                                    HorizontalAlignment="Left"
                                                    Height="0"
                                                    VerticalAlignment="Top"
                                                    Width="0">
                                                <Rectangle x:Name="opaqueRect"
                                                           Fill="{Binding Background, ElementName=dropDownBorder}"
                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </theme:SystemDropShadowChrome>
                        </Popup>

                        <ToggleButton x:Name="toggleButton"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      Grid.ColumnSpan="2"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                      Style="{StaticResource ComboBoxToggleButton}" />

                        <!--<Border x:Name="border"
                                BorderThickness="0"
                                VerticalAlignment="Center"
                                Background="Transparent">-->
                        <TextBox x:Name="PART_EditableTextBox"
                                 HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                 Style="{StaticResource ComboBoxEditableTextBox}"
                                 Padding="{TemplateBinding Padding}"
                                 Background="Transparent"
                                 Height="{TemplateBinding Height}"
                                 BorderThickness="0"
                                 VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <!--</Border>-->
                    </Grid>
                    <ItemsControl ItemsSource="{TemplateBinding Validation.Errors}"
                                  Focusable="False"
                                  IsTabStop="False">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>

                                <TextBlock Foreground="#FF5555"
                                           Margin="5,0"
                                           TextTrimming="CharacterEllipsis">    
                                            <Run Text="⚠"
                                                 FontSize="9" />
                                            <Run Text="{Binding ErrorContent}" />
                                </TextBlock>

                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>

                </StackPanel>

                <ControlTemplate.Triggers>

                    <!--<Trigger Property="IsEnabled"
                             Value="false">
                        <Setter Property="Opacity"
                                TargetName="border"
                                Value="0.56" />
                    </Trigger>-->
                    <Trigger Property="IsKeyboardFocusWithin"
                             Value="true">
                        <Setter Property="Foreground"
                                Value="Black" />
                    </Trigger>
                    <Trigger Property="HasDropShadow"
                             SourceName="PART_Popup"
                             Value="true">
                        <Setter Property="Margin"
                                TargetName="shadow"
                                Value="0,0,5,5" />
                        <Setter Property="Color"
                                TargetName="shadow"
                                Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems"
                             Value="false">
                        <Setter Property="Height"
                                TargetName="dropDownBorder"
                                Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                       Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                       Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                    </MultiTrigger>
                    <Trigger Property="ScrollViewer.CanContentScroll"
                             SourceName="DropDownScrollViewer"
                             Value="false">
                        <Setter Property="Canvas.Top"
                                TargetName="opaqueRect"
                                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter Property="Canvas.Left"
                                TargetName="opaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>

                    <Trigger Property="Validation.HasError"
                             Value=" True">
                        <Setter Property="BorderBrush"
                                TargetName="toggleButton"
                                Value="Red" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <ControlTemplate x:Key="ComboBoxTemplate"
                             TargetType="{x:Type ComboBox}">
                <Grid x:Name="templateRoot"
                      SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                          Width="0" />
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup"
                           AllowsTransparency="true"
                           Grid.ColumnSpan="2"
                           IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                           Margin="1"
                           Placement="Bottom"
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                        <theme:SystemDropShadowChrome x:Name="shadow"
                                                      Color="Transparent"
                                                      MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                      MaxHeight="{TemplateBinding MaxDropDownHeight}">
                            <Border x:Name="dropDownBorder"
                                    Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                    BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                    BorderThickness="1">
                                <ScrollViewer x:Name="DropDownScrollViewer">
                                    <Grid x:Name="grid"
                                          RenderOptions.ClearTypeHint="Enabled">
                                        <Canvas x:Name="canvas"
                                                HorizontalAlignment="Left"
                                                Height="0"
                                                VerticalAlignment="Top"
                                                Width="0">
                                            <Rectangle x:Name="opaqueRect"
                                                       Fill="{Binding Background, ElementName=dropDownBorder}"
                                                       Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                       Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                        </Canvas>
                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                        KeyboardNavigation.DirectionalNavigation="Contained"
                                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    </Grid>
                                </ScrollViewer>
                            </Border>
                        </theme:SystemDropShadowChrome>
                    </Popup>
                    <ToggleButton x:Name="toggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Grid.ColumnSpan="2"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                  Style="{StaticResource ComboBoxToggleButton}" />
                    <ContentPresenter x:Name="contentPresenter"
                                      ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                      ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                      Content="{TemplateBinding SelectionBoxItem}"
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      IsHitTestVisible="false"
                                      Margin="{TemplateBinding Padding}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasDropShadow"
                             SourceName="PART_Popup"
                             Value="true">
                        <Setter Property="Margin"
                                TargetName="shadow"
                                Value="0,0,5,5" />
                        <Setter Property="Color"
                                TargetName="shadow"
                                Value="#71000000" />
                    </Trigger>
                    <Trigger Property="HasItems"
                             Value="false">
                        <Setter Property="Height"
                                TargetName="dropDownBorder"
                                Value="95" />
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsGrouping"
                                       Value="true" />
                            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                                       Value="false" />
                        </MultiTrigger.Conditions>
                        <Setter Property="ScrollViewer.CanContentScroll"
                                Value="false" />
                    </MultiTrigger>
                    <Trigger Property="ScrollViewer.CanContentScroll"
                             SourceName="DropDownScrollViewer"
                             Value="false">
                        <Setter Property="Canvas.Top"
                                TargetName="opaqueRect"
                                Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                        <Setter Property="Canvas.Left"
                                TargetName="opaqueRect"
                                Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle"
                        Value="{StaticResource FocusVisual}" />
                <Setter Property="Validation.ErrorTemplate"
                        Value="{x:Null}" />
                <Setter Property="Background"
                        Value="White" />
                <!--<Setter Property="IsEditable"
                        Value="True" />-->
                <Setter Property="BorderBrush"
                        Value="{StaticResource AccentColor.Primary}" />
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                <Setter Property="BorderThickness"
                        Value="0,0,0,1" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                        Value="Auto" />
                <Setter Property="Padding"
                        Value="10,0" />
                <Setter Property="Height"
                        Value="37" />
                <Setter Property="VerticalContentAlignment"
                        Value="Center" />
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="true" />
                <Setter Property="ScrollViewer.PanningMode"
                        Value="Both" />
                <Setter Property="Stylus.IsFlicksEnabled"
                        Value="False" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxTemplate}" />
                <Style.Triggers>
                    <Trigger Property="IsEditable"
                             Value="true">

                        <Setter Property="Template"
                                Value="{StaticResource ComboBoxEditableTemplate}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <ControlTemplate x:Key="Template.Round.Button"
                             TargetType="{x:Type ButtonBase}">
                <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true"
                        Padding="0"
                        CornerRadius="4">
                    <Grid>
                        <Border BorderBrush="Transparent"
                                x:Name="hoverIndicator"
                                BorderThickness="0"
                                Background="Black"
                                Opacity="0"
                                CornerRadius="4" />

                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />

                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Button.IsDefaulted"
                             Value="true">
                        <Setter Property="BorderBrush"
                                TargetName="border"
                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                    </Trigger>

                    <Trigger Property="IsMouseOver"
                             Value="true">
                        <Setter Property="Opacity"
                                TargetName="hoverIndicator"
                                Value="0.2" />

                    </Trigger>
                    <Trigger Property="IsPressed"
                             Value="true">
                        <Setter Property="Opacity"
                                TargetName="hoverIndicator"
                                Value="0.4" />
                    </Trigger>

                    <Trigger Property="IsEnabled"
                             Value="false">
                        <Setter Property="Opacity"
                                TargetName="hoverIndicator"
                                Value="0.6" />
                        <!--<Setter Property="BorderBrush"
                                TargetName="border"
                                Value="{StaticResource Button.Disabled.Border}" />
                        <Setter Property="TextElement.Foreground"
                                TargetName="contentPresenter"
                                Value="{StaticResource Button.Disabled.Foreground}" />-->
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style TargetType="Button">
                <Setter Property="Template"
                        Value="{StaticResource Template.Round.Button}" />
                <Setter Property="Cursor"
                        Value="Hand" />
                <Setter Property="Height"
                        Value="40" />
            </Style>

            <Style TargetType="Button"
                   x:Key="Button.Stateless">
                <Setter Property="OverridesDefaultStyle"
                        Value="True" />
                <Setter Property="Cursor"
                        Value="Hand" />
                <Setter Property="IsTabStop"
                        Value="False" />
                <Setter Property="Focusable"
                        Value="False" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Border"
                   x:Key="Border.Round.2">
                <Setter Property="CornerRadius"
                        Value="3" />
            </Style>

            <Style TargetType="ph:PlaceholderTextbox">
                <Setter Property="Padding"
                        Value="10" />
                <Setter Property="CornerRadius"
                        Value="3,3,0,0" />
                <Setter Property="BorderThickness"
                        Value="0,0,0,1" />
                <Setter Property="BorderBrush"
                        Value="{StaticResource AccentColor.Primary}" />
                <Setter Property="Margin"
                        Value="0,0,0,5" />
                <Setter Property="Background"
                        Value="White" />

            </Style>

        </ResourceDictionary>

    </Application.Resources>
</Application>
