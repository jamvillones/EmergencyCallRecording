<UserControl x:Class="ECR.View.Views.Contents.MainContentView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:popup="clr-namespace:ECR.View.Views.Popups"
             xmlns:uc="clr-namespace:ECR.WPF.Views.UserControls"
             xmlns:utilities="clr-namespace:ECR.WPF.Utilities"
             Background="White"
             mc:Ignorable="d"
             d:DesignHeight="450"
             IsTabStop="False"
             Focusable="False"
             d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="RadioButton">
            <Setter Property="Foreground"
                    Value="#f0f0f0" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Focusable"
                    Value="False" />
            <Setter Property="IsTabStop"
                    Value="False" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="15,0" />
            <Setter Property="Margin"
                    Value="0,2" />
            <Setter Property="Height"
                    Value="40" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border x:Name="templateRoot"
                                SnapsToDevicePixels="True"
                                BorderThickness="2"
                                BorderBrush="Transparent"
                                CornerRadius="6"
                                Background="{TemplateBinding Background}">

                            <ContentPresenter x:Name="contentPresenter"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="True">
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="White" />
                                <Setter Property="BorderBrush"
                                        TargetName="templateRoot"
                                        Value="{StaticResource Main.Foreground}" />
                                <Setter Property="Background"
                                        TargetName="templateRoot"
                                        Value="{StaticResource Main.Foreground}" />
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            Value="#3f000000" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Foreground"
                            Value="White" />
                    <Setter Property="FontWeight"
                            Value="Bold" />
                </Trigger>
            </Style.Triggers>

        </Style>

        <Style x:Key="EmptyToggleStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="Button.IsDefaulted"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>-->
                            <!--<Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Border}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="LogoutButtonStyle"
               TargetType="{x:Type Button}">

            <Setter Property="Foreground"
                    Value="White" />
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Center" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6"
                                SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="#6DA9FF" />
                                <!--<Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Border}" />-->
                            </Trigger>
                            <!--<Trigger Property="IsDefaulted"
                                     Value="true">
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Pressed.Border}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="border"
                                        Value="{StaticResource Button.Disabled.Border}" />
                                <Setter Property="TextElement.Foreground"
                                        TargetName="contentPresenter"
                                        Value="{StaticResource Button.Disabled.Foreground}" />
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <utilities:BindingProxy x:Key="proxy"
                                Data="{Binding}" />

    </UserControl.Resources>

    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <Grid Margin="10"
              Width="120"
              Height="120"
              Panel.ZIndex="10"
              HorizontalAlignment="Left"
              VerticalAlignment="Top">

            <Border CornerRadius="{Binding RelativeSource={RelativeSource self}, Path=ActualWidth, Converter={StaticResource ValueDividerConverter}, ConverterParameter=2}"
                    Height="{Binding RelativeSource={RelativeSource self},Path=ActualWidth}"
                    BorderThickness="5"
                    SnapsToDevicePixels="True"
                    BorderBrush="White">
                <Border.Background>
                    <Binding Path="CurrentLoginPhoto"
                             Converter="{StaticResource ImageToBackgroundConverter}">
                        <Binding.TargetNullValue>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border Background="{StaticResource Main.Foreground}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Width="50"
                                            Height="50"
                                            Margin="-2"
                                            BorderThickness="0"
                                            SnapsToDevicePixels="True"
                                            CornerRadius="25">
                                        <TextBlock Foreground="White"
                                                   FontSize="22"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Text="{Binding Data.CurrentLoginName, Source={StaticResource proxy}, Converter={StaticResource GetFirstTwoLetterConverter}}" />
                                    </Border>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Binding.TargetNullValue>
                    </Binding>
                </Border.Background>

            </Border>

            <Button Command="{Binding ShowCurrentUserCommand}"
                    Style="{StaticResource Button.Circular}"
                    BorderThickness="5"
                    BorderBrush="Transparent"
                    Background="Transparent" />
        </Grid>


        <!--<Button WindowChrome.IsHitTestVisibleInChrome="True"
                Style="{StaticResource Button.Circular}"
                x:Name="userToggle"
                BorderThickness="0"
                Background="Transparent"
                IsTabStop="False"
                Focusable="False"
                Panel.ZIndex="1"
                Cursor="Hand"
                Margin="10"
                Padding="0"
                Width="auto"
                Height="auto"
                Command="{Binding ShowCurrentUserCommand}"
                VerticalAlignment="Top"
                HorizontalAlignment="Center">
            <Border CornerRadius="{Binding RelativeSource={RelativeSource self}, Path=ActualWidth, Converter={StaticResource ValueDividerConverter}, ConverterParameter=2}"
                    Height="{Binding RelativeSource={RelativeSource self},Path=ActualWidth}"
                    Width="80"
                    BorderThickness="5"
                    SnapsToDevicePixels="True"
                    BorderBrush="White">
                <Border.Background>
                    <Binding Path="CurrentLoginPhoto"
                             Converter="{StaticResource ImageToBackgroundConverter}">
                        <Binding.TargetNullValue>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Border Background="{StaticResource Main.Foreground}"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            Width="50"
                                            Height="50"
                                            Margin="-2"
                                            BorderThickness="0"
                                            SnapsToDevicePixels="True"
                                            CornerRadius="25">
                                        <TextBlock Foreground="White"
                                                   FontSize="22"
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Center"
                                                   FontWeight="Bold"
                                                   Text="{Binding Data.CurrentLoginName, Source={StaticResource proxy}, Converter={StaticResource GetFirstTwoLetterConverter}}" />
                                    </Border>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Binding.TargetNullValue>
                    </Binding>
                </Border.Background>

            </Border>
        </Button>-->

        <!--<Popup Placement="Left"
               x:Name="userPopup"
               IsOpen="{Binding ElementName=userToggle, Path=IsChecked}"
               PlacementTarget="{Binding ElementName=userToggle}"
               VerticalOffset="-5"
               HorizontalOffset="0"
               StaysOpen="False"
               AllowsTransparency="True">
            <popup:UserOptionsUserControl DataContext="{Binding}" />
        </Popup>-->

        <Border Grid.Row="1"
                Margin="0,70,0,0"
                Width="200"
                CornerRadius="0,30,0,0"
                Background="{StaticResource AccentColor.Primary}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                </Grid.RowDefinitions>

                <StackPanel VerticalAlignment="Center"
                            Margin="20,65,20,10">
                    <TextBlock Foreground="White"
                               FontSize="16"
                               FontWeight="Bold"
                               TextTrimming="CharacterEllipsis"
                               Text="{Binding CurrentLoginName, Mode=OneWay}" />
                    <TextBlock Foreground="#d9d9d9">
                        <TextBlock.Text>
                            <Binding Path="CurrentLoginPosition">
                                <Binding.TargetNullValue>
                                    *Position not Specified
                                </Binding.TargetNullValue>
                            </Binding>
                        </TextBlock.Text>
                    </TextBlock>
                </StackPanel>

                <Rectangle Grid.Row="1"
                           Fill="White"
                           Height="0.5"
                           Margin="20,0" />

                <StackPanel Orientation="Vertical"
                            Grid.Row="2"
                            Margin="10">
                    <RadioButton IsChecked="True"
                                 Command="{Binding SwitchToRecordsCommand}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image Width="15"
                                   Source="/Images/SideButtons/moleskine_50px.png" />
                            <TextBlock Grid.Column="2"> Records</TextBlock>
                        </Grid>
                    </RadioButton>
                    <!--<RadioButton>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image Width="15"
                                   Source="/Images/SideButtons/related_companies_50px.png" />
                            <TextBlock Grid.Column="2">Agencies</TextBlock>
                        </Grid>
                    </RadioButton>
                    <RadioButton>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image Width="15"
                                   Source="/Images/SideButtons/location_50px.png" />
                            <TextBlock Grid.Column="2">Locations</TextBlock>
                        </Grid>
                    </RadioButton>-->
                    <RadioButton Command="{Binding SwitchToLoginsCommand}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image Width="15"
                                   Source="/Images/SideButtons/member_50px.png" />
                            <TextBlock Grid.Column="2"> Users</TextBlock>
                        </Grid>
                    </RadioButton>
                    <!--<RadioButton>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition Width="10" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image Width="15"
                                   Source="/Images/SideButtons/automation_50px.png" />
                            <TextBlock Grid.Column="2"> Settings</TextBlock>
                        </Grid>
                    </RadioButton>-->
                </StackPanel>

                <Rectangle Grid.Row="3"
                           Fill="White"
                           Height="0.5"
                           Margin="20,0" />

                <Button BorderThickness="0"
                        Background="Transparent"
                        HorizontalContentAlignment="Left"
                        Padding="15,0"
                        Height="40"
                        Margin="10,10,10,10"
                        Foreground="White"
                        Command="{Binding LogOffCommand}"
                        Grid.Row="4">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="10" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Width="15"
                               Source="/Images/shutdown_50px.png" />
                        <TextBlock Grid.Column="2">
                            Log Out
                        </TextBlock>
                    </Grid>
                </Button>
            </Grid>
        </Border>
        <!--<Rectangle Height="0.5"
                   Grid.Row="1"
                   Grid.Column="1"
                   Fill="Gray"
                   Panel.ZIndex="1"
                   VerticalAlignment="Top"
                   Margin="15,40,15,0" />-->
        <ContentControl Grid.Column="1"
                        Margin="10,40,0,0"
                        IsTabStop="False"
                        Focusable="False"
                        Content="{Binding CurrentTab}" />

        <ContentControl Grid.Column="1"
                        Margin="10 40 0 0"
                        IsTabStop="False"
                        Focusable="False"
                        Content="{Binding ModalViewer.CurrentModal}" />

        <ItemsControl Grid.Column="1"
                      DataContext="{Binding NotificationHandler}"
                      Panel.ZIndex="20"
                      Width="auto"
                      Height="auto"
                      MaxHeight="410"
                      Margin="10"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Bottom"
                      ItemsSource="{Binding Notifications}">
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <uc:NotificationItem_UserControl />
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!--<usercontrol:RecordsView Grid.Column="2" />-->

    </Grid>
</UserControl>
